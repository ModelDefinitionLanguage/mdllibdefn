/*
 * generated by Xtext
 */
package eu.ddmore.mdllib.tests

import com.google.inject.Inject
import eu.ddmore.mdllib.mdllib.Library
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.XtextRunner
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.Assert
import org.junit.Test
import org.junit.runner.RunWith

@RunWith(XtextRunner)
@InjectWith(MdlLibInjectorProvider)
class MdlLibParsingTest {
	@Inject
	ParseHelper<Library> parseHelper
	
	@Test
	def void loadModel() {
		val result = parseHelper.parse('''
			_type divUse _enum (covariate, amt, dv, dvid, cmt, mdv, idv, id, rate, ignore, varLevel, catCov, ss, ii, addl);
			_list covList _alt ::real _atts use::divUse
				_sig (use);
			_list catCovList _atts use::divUse
				_cat use::int
			 	_sig (use);
			
			_block DATA_INPUT_VARIABLES (0,) _statements (1,) _listDefn
				_list _key=use divUse.covariate->covList, divUse.catCov->catCovList;
		''')
		Assert.assertNotNull(result)
		Assert.assertTrue(result.eResource.errors.isEmpty)
	}
}
