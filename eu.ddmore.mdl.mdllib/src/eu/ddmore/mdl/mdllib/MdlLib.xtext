grammar eu.ddmore.mdl.mdllib.MdlLib with org.eclipse.xtext.common.Terminals

generate mdlLib "http://eu.ddmore.mdl.mdllib/mdl/mdllib/MdlLib"


Library:
	{Library} typeDefns += TypeDefinition* 
	funcDefns += FunctionDefinition* 	
;
	
	
TypeDefinition:
	'type' name=ID class=TypeClass ';'
;
	
FunctionDefinition:
	{FunctionDefinition} 'func'  defns+= FunctionDefnBody (',' defns+=FunctionDefnBody)* ';'
;

FunctionDefnBody:
	{FunctionDefnBody} name = ID descn=STRING? argument=FuncArgs 
			'returns' returnType=TypeSpec
;

FuncArgs:
	UnnamedFuncArgs|NamedFuncArgs
;

UnnamedFuncArgs:
	{UnnamedFuncArgs} '(' (arguments += ArgumentDefinition (=> ',' arguments += ArgumentDefinition)*)? ')'
;

ArgumentDefinition:
	{ArgumentDefinition} name=ID typeSpec=TypeSpec descn=STRING? 
;

NamedFuncArgs:
	{NamedFuncArgs} 'named' '(' arguments += ArgumentDefinition (=> ',' arguments += ArgumentDefinition)* ')'
					('sig' (sigLists+= SignatureList (',' sigLists+= SignatureList)*))? 
;

SignatureList:
	{SignatureList} '(' (argRefs+=ArgumentRef (',' argRefs+=ArgumentRef)*)? ')'
;

ArgumentRef:
	{ArgumentRef} argRef=[ArgumentDefinition] (options?='?')?
;


TypeSpec:
	{TypeSpec} '::' typeName=[TypeDefinition] ('[' elementType=TypeSpec ']'|'[[' cellType=TypeSpec ']]')?
;


//TypeName:
//	'::' TYPE_NAME
//;

//terminal TYPE_NAME:
//	('A'..'Z')('a'..'z'|'A'..'Z'| '0'..'9')+
//;

enum TypeClass:
		ENUM='_enum'| SUBLIST='_sublist'| SCALAR='_scalar'|VECTOR='_vector'|MATRIX='_matrix' 
	;